#!/bin/bash -e
spath=$( cd "$(dirname "$0")" ; pwd -P )

source $spath/utils/android

usage() {
	echo "androdeb"
	echo "	shell		Enter the androdeb shell environment and get to work!"
	echo ""
	echo "	prepare		Prepare the device (when running for the first time)"
	echo "	--tracers	Enable tracing packages (perf and trace-cmd)"
	echo "	--compilers	Enable compilers on the FS (gcc and clang)"
	echo "	--editors	Enable vim, emacs and git packages"
	echo "	--scheduler	scheduler testing tools (only rt-app for now)"
	echo "	--bcc		Build and install BCC from source"
	echo "	--fullbuild	Enable all of the above tools"
	echo ""
	echo "	--kernelsrc	path-to-kernel-sources (can be used for bcc)"
	echo "	--tempdir	use a specific temporary directory"
	echo "	--distro	Debian distro to base on (default is buster)"
	exit 1
}

# Set default vars
DISTRO=buster;      PACKAGES=""

# Parse command line parameters
if [ $# -lt 1 ]; then usage; fi; POSITIONAL=()
while [[ $# -gt 0 ]]; do; key="$1"
case $key in
    prepare) PREP=1;     shift || true;    ;;
    shell) SHELL=1;     shift || true;     ;;
    --tracers) TRACERS=1; source $spath/packages/tracers; shift || true; ;;
    --compilers) COMPILERS=1; source $spath/packages/compilers; shift || true; ;;
    --editors) EDITORS=1; source $spath/packages/editors; shift || true; ;;
    --scheduler) SCHEDULER=1; source $spath/packages/scheduler; shift || true; ;;
    --fullbuild) FULLBUILD=1; for f in $(ls $spath/packages); do source packages/$f; done; shift || true; ;;
    --bcc)    BCC=1; shift || true;     ;;
    --kernelsrc) KERNELSRC="$2"; shift || true;     shift || true;     ;;
    --tempdir) TMPDIR="$2"; shift || true;     shift || true;     ;;
    *) echo "Unknown option ($1)"; usage; ;;
esac
done

if [[ ! -z ${PREP+x} ]] && [[ "x$PACKAGES" == "x" ]]; then
	echo "Need to specifify something to prepare"; usage;
fi

##########################################################
#  PREPARE
##########################################################
# Where do we want to store temporary files
if [[ -z ${TMPDIR+x} ]]  || [[ ! -d "${TMPDIR}" ]]; then
	TMPDIR=`mktemp`; fi

echo $PACKAGES
